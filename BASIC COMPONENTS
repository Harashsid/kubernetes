NODES,
PODS
CONTAINERS:
PV AND PVC FOR STORAGE.
DEPLOYMENT: HOW MANY REPLICAS.
SERVICES: ACCESSING THE APPLICATION RUNNING IN POD VIA LOAD BALANCER OR INGRESS.

                                                           KUBERNETES DEPLOYMENTS VS STATEFULS SET VS DAEMON SETS
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEPLPYMENTS: WE MENTION HOW MANY REPLCIAS NEED ABOUT PODS,STATELESS,NO ORDER IN CREATING AND DELETING,NO UNIQUE DNS NAME
            POD CREATD-->VOLUME ADDED-->REPLICAS ADDED-->VOULME WONT SHARE T NEW PODS
            IMAGE CHANGE-->NO NEW VOLUME TO CREATED CONTAINER,,STRATEGY RECREAT


STATEFULS: LIKE DEPLOYMENT,BUT WE MENTION VOLUME-->PVC-->PV-->STORAGE

DAEOMONT:AGENT/MONITRPING TOOL ON EVERY NODE TO PUSH REQUIRED METRICS OF EACH NODE IN NODE GROUP
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CLUSTER IP: DEFAULT SERVICE WHICH ENABLES COMMUNICATION BETWEEN SERVICES.CANT EXPOSE TO INTERNET
NODE IP: PUBLIC SUBNET-->PUBLIC IP-->PORTS AND FIRWALL TABLES-->NOT SECURE AS PUBLIC SUBNET AND DNS/IP GET CHANGED FOR EVERY NEW NODE
          ONLY FOR TESTING/POC 
LOAD BALANCER: DISTRIBUTES TRAFFIC WITH CLOUD CONTROLLER,BUT ONE LOAD BALACER TO EVERY SERVICE-->NO FILTERS,NO PATHS

INGRES/INGRESS CONTROLLER: LOAD BALANCER-->INGRESS-->DISTRIBUTE TRAFFICE-->TO DOFFIERNET SERVICE SBASED ON PATHS
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

NODE SELECTOR:NOT VERBOSE
NODE AFFINITY:NODE LABELS-->>PODS RUNS ON THAT NODES
              REQUIRED/PREFERRED DURING SCHUDLING IGNORED DURING EXCUTION

POD AFFINITY: DEPLOY ON NODE WITH TOPLOGY AND POD VALUES,WEB AND CACHE
POD ANTIAFFNITY: DEPLOY SAME TYPE OF PODS ON DIFFER ENT NODES -->LAOD BALANCER-WEBSERVER

TAINT: NO PODS WILL SCHUDLES
TOLERATE:NO SCHUDLING
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
DEPLOTMENT STRATEGIES:
1.ROLLING UPDATE(DEFAULT)
      NO DOWNTIME,GRADDUALY UPGRADES TO NEW VERSION
      MAX SURGE:,MAX UNAVIALBLE
      KUBECTL ROLLOUT UNDO.RESUME.RESTART,PAUSE DEPLOYMENT/DEPLYMENTNAME
      REALTIME: WE USE GITOPS TO REVERT THE LATEST/STARBLE VERSION OF YOUR IMAGE

2.RECREATE:
      KILLINS ALL RUNNING PODS WITH OLD VERSION AND REPLACES WITH NEW VERSION
      DEVELOPNET,WITH LIMITED RESOURCES

3.BLUE-GREEN DEPLOYMENT:
        BLUE IS STABLE VERSION AND GREEN IS STANDBY WITH NEW VERSION
        PODS WITH BLUE LABEL
        PODS WITH GREEN LABEL
        QA TEAM TESTED AND APPROVED ,SO WE CHANGE THE POD LABEL IN SERVICE 
        NO DOWNTIME

4.CANARY DEPLOUMENT:
       WATCH -N O.5 -T KUBECEL GET PODS -N DEFAULT

MANUALLY-->NEED TO CHANGE THE IMAGE AND HAVE 5 COMMITS USING GITOPS LIKE ARGOCD
   JAGGER-->AUTMATICALLY DOES THIS PART-->VIDEO CHUDALLE

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


KUBERNETES INGRESS EXPLAINED:
    PRIVATE INGRESS/PUBLIC INGRESS
   LOAD BALANCER-->SINGLE SERVICE-->COSTLY
   INGRESS-->PATH BASED/HOST BASES-->SERVICE,BUT NEED TO CONFGURE INGRESS CONTOLLER
            CA-TLS CERFICATE-->LETS ENCRPT-->60 DAYS-->HTTPS INTO HTTP
            CLUD BASED-->LOAD BALANCER LEVEL->TLS TERMINATED
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

PODS:
    HORIZAONTAL POD AUTOSCALER:
      HPA CONTOLLER-->SCALE TARGET REF(DEPLYMENT /STATEFUL NAME)-->RESOURCE LIKE CPU /MEMOERY
      DEPLOYMENT MUST USE REUQESTS IS MANDATORY AND LIMITS IS OPTIONAL
      METRCI SERVER--HPC CONTLLER--TALKS WITH IT

     PROMETHEUSOPERATOE-->INSTANCE--->TLKS WITH POD
                          PRMETHUES ADAOPTER CONVERTS METEIC AND PUT INTO CUSTOMERICS AP
                          HPA CONTOLLER USES CUSTOMMETRICSAPI

    
     VERTICAL POD AUTOSCALER: INCRESING THE POD CIMPUTES
                              RECREATE MODE,INTIAL MODE,RECOMMENDATION MODE
                              WE NEED TO INSTALL.

      KEDA: PRODUCERS-----MESSAGES{KADKA}--ADAPTER{INCREASE THE POD COUNT}
                          DYNAMODB

NODES:
    CLUSTER SCALER-->NO OPTION IN AWS,AKS AND GKE HAD
      CLSUTER-->NODE GROUP-->AUTOSCALING GROUP
      SAME SIZE IN SINGLE GROUP-->IF PENDING PODS WITH LESS COMPUTE,PORVISING NEW NODE WITH SAME CONFIRURATION AD RESOURCE WILL LOST.
    KARPENTER: PENDING NODES SIZE-->LAUCH NODE ACCORDINLY.

SERVERLESS: AWS FARGATE/GOOGLE AUTOPILOT-->RUN THE PD-->CREATES THE NODE-->DEPLOENDS ON COST LIKE HOW MUCH CPU/MEMORY NEEDED.

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

A.APPLICATION PLANNING
    APPLICATION TIER--->LOGICAL TIER-->DATA BASE 
    LOGICAL TIER-->REST API-->ETL-->KAFKA-->TRASNFORM
    SO WE DCEOUPLE DIFFERNETS APPS


B.IMAGE CREATION AND PUSH INTO ECR
APPLICATION IN GO LAN-->DOCKER FILE-->IMAGE
APPLS ARE UNDERPERFORM USED MORE COMPUTE LIKE CPU,MEMORY,NETWROK BAND WIDTH.
TRADITINAL-->HARDARE-->OS--->APPLCATIONS
VIRUTAL--->HARDWARE-->OS-->HUPERVISRO-->{OS,LIBRARIES}
CONTAINER---->HARWARE-->OS-->CONTAINER->{LIBRARIES}-->FASR,RELIABLE,PROTABLE
DOCKERFILE-->IMAGE CREATIOM

C.POD-->REQUESTS AND LIMITS
      PODS HAS UNIQUE IP ADDRESSES-->CONTAINERS HAVE SHARED NETWRK AND STROAGE-->CONTEXT USING CNAMES AND LINUXGROUPS
      PODS-->2 CONTAINERS-->VOLUME SHARED{IMAGE VERSION CHNAGED--DELOUY ON OTHER NODE}
      SIDE CAR CONTIANER: NGINER-->FLUNET(COLLECT LOGS,PRCOES,SENDS}
      INIT CONTANINER:MAIN CONNTAINER-WASNT CODE FROM GITHUB,DBPREPERATION,AUTHENICATION

  D.DEPLOYMENT:
      KASTHAM-->5 PODS NEEEDED,,IMAGE CHNAGED,,COMPUTE CHNAGE NEEDED-->VERY HARD TO MANAGE
               DURING UPGRATION,POD EVICTED,WE NEED TO CREATE AGAIN

       DEPLYMENT CONTROLLER-->5 REPLICAS,RECONICALITION LOOP, 
       STRATETHY:ROLLING UPDATE,RECREATE
       VOLUME-->READWRTI ONCE-->SINGLE POD
      IF POD CREATES ,NEW POD WONT SHARE VOLUME..DEPLOYMENT FOR STATELESS
      IF PODS CREATS ON SAME NODE-->PODS GET SHARED VOLUME

     PRODUCTION: NODES GET DRAINED/REMOVED,,SO NO IDEAL CASE
                 READWRITEMANY-->EFS->VOLUME CAN BE SHARED BY MULITPLE PODS IN DIFFERENT NODE
                 HOW ABOUT NODES IN DIFFETENT AZ?ISSUE HAPPENED
                 DEPLOYMENT{APPLIATION WOT SHARE DATA}SO EACH POD NEED SEPERATE DEPLYMENT AND VOLUME-->DELETING THE PODS DOES NOT ENUGH,WE NEED TO REMVOE DPELOYMENT AND PVC

  E.STATEFUL SETS:
               BY SEEING TEMPLATESINFORMATION-->REPLCIAS-VOLUMES-->PODS N SAME AZ
               STABLE NETWORK -->PODS HAS UNIQURE IP ADRESS

  F.DAEMON SETS:
           RUNS ON EVERY NODE,WE CANT ACHIVE THSI USING DEPLOYMENT OR STATEFUL
           NODE EXPORTED/CADVISR

 H.JOBS:

   ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

LIVENES PROBE: CHECKS APPLICATION IS HEALTHY OR NOT AND RESTART THE POD AND DPLOY ON DIFFERNT NODE
READNIESS PROBE: PODS IS READY TO DISTUBTE THE TRAFFIC.
START PROBE:LEGACY APPLICATIONS TAKES TIME TO BEGIN

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
DOCKER VS KUBENTES VS CONTAINERD:


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ROLE BASE ACCESS CONTROL:

    KUBECTL-->APISERVER AUTHENICATION-->AUTHORIZATION-->ADMISSION CONTROL TO ETDC

    IDENTITY--->RESOURCES-->BINDING

IDENTITY:
       KUBERNTES,WE WONT CREATE USERS BY API CALL, WE GET COMMON NAME THROUGH CERTIFCATE AUTHRITY
       SERVICE ACCOUNT-->USERS/GROUP OF USERS/THRID PARTES.
      EG: PROMEHTEUS TO COLLECT METRICS FROM TARGETS.

ROLE:
    COLLECTIONS OF RULES:
           RULES IS COLLECTION OF APIGROUPS,RESOURCES AND VERBS
 
                     APIGROUPS,RESOURCES,VERBS
          FOR CUSTOM APIS, WE HAVE TO MENTION THAT API GROUP

ROLE BINDING:
         KIND:,NAME,NAMESPACE
NOTE: THS ARE NAMESAPCES-->PODS,SERVICEACCOUNTS

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CLUSTER ROLE : BINDING

NODES AND PERSISTENT VOLUME


///////////////////////////////////////////////////////////////////////////////////////////

INGRESS-->SERVICE-->DEPLOYMENTS-->REPLICA-->PODS

1.SERVICE LABELS SHOULD MATCH WITH PODS LABELS
2.TARGET PORTS,,INSTAED OF PORT USE NAMES---WE HAVE SAME PORTS FOR SERICE AND PODS AS IT HAS DIFFERNT IP ADDRESS
3.DEPLOYMENT MATCHLABESL WITH POD LABESL

KUBECTL GET PODS --SHOW-LABLES
KUBECTL GET PODS --SELECTOR NAME-HARISH --SHOW-LABELS
KUBECTL GET ENDPOINTS MYSERVICE-->SHOWS PODS IP ADDRESES
KUBECTL PORT-FOWORD SERVICE/SERVICENAME URPORT:SERVICEPORT
4.SERVICE NAME SHOULD MATCH WITJ INGRESS SERVICENAME SECTIONS
5.SERVICE PORT SHOULD MATCH WITH INGRESS PORT

DEBUGGING: 
         1.CHECK PODS ARE RUNNING AND READY STATE
            KUBECTL GET PODS,
            KUBECTL DESCRIBE POD PODNAME-->TO CHECK THE EVENTS
            KUBECTL LOGS -F CNTAINERNAME,
            KUBECTL EXEC -IT CONTAINERNAME SH

RUNTIME ERRORS:

  1.CRASHLOOPBACKOF:

        
  2.RUNCONTAINERERROR: CONTAINER IS NOT GETTING CREATED BEFORE APPLICATING RUNNING
                     MOUNT THE VLOUME WHICH IS NOT CREATED FOR CONFIGMAPS/SECRETS AND MOUNTING VLOUMW WHICH IS READ NOT READ/WRITE.

 3.PODS ARE IN PEDNING STATE:
                           1.NO ENOUGH RESOURCE IN CLSUTER
                            2.NAMESPACES HAS LIMITATIONS   
                            3.PODS BOND TO PENDING PVC
                          4.SELECTOR,EFFFINIT OR TAINT
STARTUP ERRORS:
4.IMAGE PULL OFF:1.INVALID IMAGENAME,NO PROPER TAG, PRIVATE IMAGE NO ACCESS
CONTROL PLANE CRASHED-->NO PROBELM ON RUNNING PODS IN SLAVES
                       1.NOW NEW PODS 2.NO AUTO HEALING 3.HORIZAL POD AUTOSCALER




    
     






        
            












         

   

   


















        
        
       



















































